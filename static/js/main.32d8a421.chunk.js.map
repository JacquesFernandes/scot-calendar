{"version":3,"sources":["serviceWorker.js","components/CalendarMonthButton.js","components/DateItem.js","components/AddItem.js","utils/storage.js","components/CalCell.js","components/CalendarMonth.js","containers/Calendar.js","containers/EditDate.js","containers/NotFound.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","MONTH_LIST","CalendarMonthButton","props","_this","Object","classCallCheck","this","currentMonth","possibleConstructorReturn","getPrototypeOf","call","state","_","isNumber","isModalOpen","handleMonthClick","bind","assertThisInitialized","setModalState","setModalOpenState","isOpen","arguments","length","undefined","setState","month","index","_this2","isFunction","onMonthUpdate","_this3","react_default","a","createElement","Modal","trigger","Button","content","size","onClick","open","closeOnDimmerClick","closeIcon","Icon","name","Header","Content","Grid","stackable","columns","Row","map","Column","style","marginTop","key","fluid","disabled","React","Component","DateItem","onSaveClick","onInputChange","onCheckClick","prevProps","prevState","stateObj","objectSpread","isEmpty","onItemSave","trim","onItemClear","event","value","_ref","Table","Cell","textAlign","TextArea","autoHeight","onChange","width","Group","vertical","icon","positive","negative","AddItem","onAddClick","onItemAdd","isInputValid","collapsing","generateKeyFromDate","date","matcher","RegExp","isDate","d","getDate","m","getMonth","concat","isString","test","getItemsForDate","data","sessionStorage","getItem","JSON","parse","CalCell","modalItems","handleClick","handleCloseClick","generateModalItem","getModalFormattedDateString","dd","String","mm","getFullYear","holiday","Label","detail","color","nextHoliday","isArray","push","setItem","stringify","storeItem","toConsumableArray","editItemForDateIndex","newData","filter","list","listIndex","clearItemForDateIndex","components_DateItem","cursor","active","generateHolidayLabel","unstackable","Body","components_AddItem","CalendarMonth","weeks","generateCalendarWeeks","generateWeekRow","Date","setMonth","dateList","setDate","weekCounter","forEach","getDay","unshift","week","weekIndex","holidays","getNextHoliday","components_CalCell","find","celled","HeaderCell","Calendar","currentMonthNumber","currentMonthHolidays","handleMonthUpdate","axios","get","then","currentYear","scottishHolidays","scotland","events","item","includes","holiDate","title","catch","err","console","error","newMonth","centered","components_CalendarMonthButton","components_CalendarMonth","EditDate","NotFound","App","margin","Card","Switch","Route","exact","path","component","ReactDOM","render","BrowserRouter","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32d8a421.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Modal,\n  Button,\n  Grid,\n  Icon,\n} from 'semantic-ui-react';\n\nconst MONTH_LIST = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\" \n];\n\nclass CalendarMonthButton extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    let { currentMonth } = this.props;\n\n    this.state ={\n      currentMonth: MONTH_LIST[ (_.isNumber(currentMonth) && currentMonth >= 0 && currentMonth <= 11)? currentMonth : 0 ],\n      isModalOpen: false,\n    };\n\n    this.handleMonthClick = this.handleMonthClick.bind(this);\n    this.setModalState = this.setModalOpenState.bind(this);\n  }\n\n  setModalOpenState(isOpen=true) {\n    this.setState({\n      isModalOpen: isOpen,\n    });\n  }\n\n  handleMonthClick(month, index) {\n    this.setState({\n      currentMonth: month,\n    }, () => {\n      this.setModalOpenState(false);\n      if(_.isFunction(this.props.onMonthUpdate)){\n        this.props.onMonthUpdate(index);\n      }\n    });\n  }\n\n  render() {\n    return(\n      <Modal\n        trigger={\n          <Button\n            content={this.state.currentMonth}\n            size=\"large\"\n            onClick={() => this.setModalOpenState(true)}\n          />\n        }\n        open={this.state.isModalOpen}\n        closeOnDimmerClick\n        closeIcon={<Icon name=\"close\" onClick={() => this.setModalOpenState(false)} />}\n        >\n        <Modal.Header content=\"Pick a Month\" />\n        \n        <Modal.Content >\n          <Grid\n            stackable\n            columns={3}\n            >\n            <Grid.Row >\n              {\n                _.map(MONTH_LIST, (month, index) => <Grid.Column style={{marginTop:\"0.5em\"}} key={\"month_\"+index} >\n                    <Button fluid content={month} disabled={this.state.currentMonth === month} onClick={() => this.handleMonthClick(month, index)} />\n                  </Grid.Column>)\n              }\n            </Grid.Row>\n          </Grid>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n\nexport default CalendarMonthButton;","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TextArea,\n  Button,\n} from 'semantic-ui-react';\n\nclass DateItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: this.props.content,\n    };\n\n    this.onSaveClick = this.onSaveClick.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onCheckClick = this.onCheckClick.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let stateObj = {};\n\n    if(this.props.content !== prevProps.content){\n      stateObj = {\n        ...stateObj,\n        content: this.props.content,\n      }\n    }\n\n    if(!_.isEmpty(stateObj)){\n      this.setState(stateObj);\n    }\n  }\n\n  onSaveClick() {\n    if(_.isFunction(this.props.onItemSave)){\n      this.props.onItemSave(this.props.index, _.trim(this.state.content));\n    }\n  }\n\n  onCheckClick() {\n    if(_.isFunction(this.props.onItemClear)){\n      this.props.onItemClear(this.props.index);\n    }\n  }\n\n  onInputChange(event, { value }) {\n    this.setState({\n      content: value,\n    });\n  }\n\n  render() {\n    return(\n      <Table.Row>\n        <Table.Cell textAlign=\"center\" >\n          <TextArea \n            autoHeight\n            value={this.state.content}\n            onChange={this.onInputChange}\n            style={{width:\"100%\"}}\n          />\n        </Table.Cell>\n        <Table.Cell textAlign=\"center\" >\n          <Button.Group vertical >\n            <Button icon=\"save\" positive disabled={this.props.content === this.state.content} onClick={this.onSaveClick} />\n            <Button icon=\"delete\" negative onClick={this.onCheckClick} />\n          </Button.Group>\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nexport default DateItem;","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  Button,\n  TextArea\n} from 'semantic-ui-react';\n\nclass AddItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\",\n    };\n\n    this.onAddClick = this.onAddClick.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n  }\n\n  onAddClick() {\n    if(_.isFunction(this.props.onItemAdd)){\n      this.props.onItemAdd(_.trim(this.state.content));\n      this.setState({content: \"\"});\n    }\n  }\n\n  onInputChange(event, { value }) {\n    this.setState({\n      content: value,\n    })\n  }\n\n  render() {\n    let isInputValid = _.trim(this.state.content).length > 0;\n\n    return(\n      <Table.Row positive  >\n        <Table.Cell textAlign=\"center\" >\n          <TextArea \n            autoHeight\n            value={this.state.content}\n            onChange={this.onInputChange}\n            style={{width:\"100%\"}}\n          />\n        </Table.Cell>\n        <Table.Cell textAlign=\"center\" collapsing >\n          <Button.Group vertical >\n            <Button icon=\"plus\" positive={isInputValid} disabled={!isInputValid} onClick={this.onAddClick} />\n          </Button.Group>\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nexport default AddItem;","import _ from 'lodash';\n\nfunction generateKeyFromDate(date) {\n  let matcher = new RegExp(\"^[0-9]{1,2}/[0-9]{1,2}$\")\n  if(_.isDate(date)){\n    let d = date.getDate();\n    let m = date.getMonth();\n    return `${d}/${m}`;\n  }\n  else if(_.isString(date) && matcher.test(date)){\n    return date;\n  }\n  else{\n    return null;\n  }\n}\n\nfunction storeItem(date, content) {\n  let key = generateKeyFromDate(date);\n  if(key){\n    let data = getItemsForDate(date);\n    if(data && _.isArray(data)){\n      data.push(content);\n      sessionStorage.setItem(key, JSON.stringify(data));\n    }\n    else{\n      sessionStorage.setItem(key, JSON.stringify([content]));\n    }\n  }\n}\n\nfunction getItemsForDate(date) {\n  let key = generateKeyFromDate(date);\n  if(key){\n    let data = sessionStorage.getItem(key);\n    if(data){\n      return JSON.parse(data);\n    }\n    else{\n      return [];\n    }\n  }\n  else{\n    return [];\n  }\n}\n\n\nfunction getItemsForMonth(monthIndex) {\n  let keys = _.filter(_.keys(sessionStorage), (key) => (_.split(key,\"/\").pop() === String(monthIndex)));\n  return _.map(keys, getItemsForDate);\n}\n\nfunction editItemForDateIndex(date, index, content) {\n  let data = getItemsForDate(date);\n  data[index] = content;\n  sessionStorage.setItem(generateKeyFromDate(date), JSON.stringify(data));\n}\n\nfunction clearItemForDateIndex(date, index) {\n  let data = getItemsForDate(date);\n  let newData = _.filter(data, (list, listIndex) => (index !== listIndex));\n  sessionStorage.setItem(generateKeyFromDate(date), JSON.stringify(newData));\n}\n\nexport {\n  storeItem,\n  getItemsForDate,\n  getItemsForMonth, \n  editItemForDateIndex,\n  clearItemForDateIndex,\n};","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  Modal,\n  Icon,\n  Label,\n} from 'semantic-ui-react';\n\nimport DateItem from './DateItem.js';\nimport AddItem from './AddItem.js';\nimport {\n  getItemsForDate,\n  storeItem,\n  editItemForDateIndex,\n  clearItemForDateIndex,\n} from '../utils/storage.js';\n\nclass CalCell extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state={\n      isModalOpen: false,\n      modalItems: getItemsForDate(this.props.date) || [],\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCloseClick = this.handleCloseClick.bind(this);\n    this.generateModalItem = this.generateModalItem.bind(this);\n    this.getModalFormattedDateString = this.getModalFormattedDateString.bind(this);\n    this.onItemAdd = this.onItemAdd.bind(this);\n    this.onItemSave = this.onItemSave.bind(this);\n    this.onItemClear = this.onItemClear.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    let stateObj = {};\n\n    if(prevProps.date !== this.props.date){\n      stateObj = {\n        ...stateObj,\n        modalItems: getItemsForDate(this.props.date),\n      };\n    }\n\n    if(!_.isEmpty(stateObj)){\n      this.setState(stateObj);\n    }\n  }\n\n  handleClick(event, data) {\n    this.setState({\n      isModalOpen: true,\n      modalItems: getItemsForDate(this.props.date)\n    });\n  }\n\n  handleCloseClick() {\n    this.setState({\n      isModalOpen: false,\n    });\n  }\n\n  getModalFormattedDateString() {\n    let { date } = this.props;\n\n    if(date){\n      let dd = date.getDate();\n      dd = (dd >= 10)? String(dd) : \"0\"+dd;\n      let mm = date.getMonth()+1;\n      mm = (mm >= 10)? String(mm) : \"0\"+mm;\n      let yyyy = String(date.getFullYear());\n      return(dd+\"/\"+mm+\"/\"+yyyy);\n    }\n    else{\n      return \"Someday~!\";\n    }\n  }\n\n  generateHolidayLabel() {\n    if(this.props.holiday){\n      return(\n        <Label\n          content=\"Holiday\"\n          detail={this.props.holiday.name}\n          size=\"large\"\n          color=\"green\"\n          icon=\"heart\"\n        />\n      );\n    }\n    else if(this.props.nextHoliday){\n      return(\n        <Label\n          content=\"Next Holiday\"\n          detail={this.props.nextHoliday.name + \" (\"+this.props.nextHoliday.date+\"/\"+this.props.nextHoliday.month+\")\"}\n          size=\"large\"\n          color=\"blue\"\n          icon=\"heart outline\"\n        />\n      );\n    }\n    else{\n      return(\n        <Label\n          content=\"No Upcoming Holidays This Month\"\n          size=\"large\"\n        />\n      );\n    }\n  }\n\n  onItemAdd(content) {\n    storeItem(this.props.date,content);\n    this.setState({\n      modalItems: [...this.state.modalItems, content],\n    });\n  }\n\n  onItemSave(index, content) {\n    editItemForDateIndex(this.props.date, index, content);\n    this.setState({\n      modalItems: getItemsForDate(this.props.date),\n    });\n  }\n\n  onItemClear(index) {\n    clearItemForDateIndex(this.props.date, index);\n    this.setState({\n      modalItems: getItemsForDate(this.props.date),\n    });\n  }\n\n  generateModalItem(data, index) {\n    return(\n      <DateItem\n        key={\"DI_\"+index}\n        index={index}\n        content={this.state.modalItems[index]}\n        onItemSave={this.onItemSave}\n        onItemClear={this.onItemClear}\n      />\n    );\n  }\n\n  render() {\n    return(\n      <Modal\n        trigger={\n          <Table.Cell\n            style={{marginTop:\"0.5em\", cursor:(this.props.date)? \"pointer\" : null}}\n            onClick={(this.props.date)? this.handleClick : null}\n            active={!_.isEmpty(this.props.holiday) || !_.isEmpty(this.state.modalItems)}\n            >\n            {(this.props.date)? this.props.date.getDate() : null}\n          </Table.Cell>\n        }\n        closeIcon={<Icon name=\"close\" onClick={this.handleCloseClick} />}\n        open={this.state.isModalOpen}\n        closeOnDimmerClick\n        >\n        <Modal.Header content={this.getModalFormattedDateString()} />\n        <Modal.Content>\n          {this.generateHolidayLabel()}\n        </Modal.Content>\n        <Table unstackable >\n          <Table.Body>\n            {\n              _.map(this.state.modalItems,this.generateModalItem)\n            }\n            <AddItem \n              onItemAdd={this.onItemAdd} \n            />\n          </Table.Body>\n        </Table>\n      </Modal>\n    );\n  }\n}\n\nexport default CalCell;","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table\n} from 'semantic-ui-react';\n\nimport CalCell from './CalCell.js';\n\nclass CalendarMonth extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentMonth: this.props.currentMonth,\n      weeks: this.generateCalendarWeeks(this.props.currentMonth),\n    };\n\n    this.generateCalendarWeeks = this.generateCalendarWeeks.bind(this);\n    this.generateWeekRow = this.generateWeekRow.bind(this);\n  }\n\n  componentDidUpdate(){\n    let stateObj = {};\n\n    if(this.state.currentMonth !== this.props.currentMonth){\n      stateObj = {\n        ...stateObj,\n        currentMonth: this.props.currentMonth,\n        weeks: this.generateCalendarWeeks(this.props.currentMonth),\n      };\n    }\n\n    if(!_.isEmpty(stateObj)){\n      this.setState(stateObj);\n    }\n  }\n\n  generateCalendarWeeks(month=this.state.currentMonth) {\n    let date = new Date();\n    date.setMonth(month, 1); // set date object to point to the first date of the month\n\n    let dateList = [];\n    while(date.getMonth() === this.props.currentMonth){\n      dateList.push(new Date(date));\n      date.setDate(date.getDate() +1);\n    }\n\n    let weeks = [];\n    let weekCounter = 0;\n    _.forEach(dateList, (date) => { // create and add lists of the weeks for this month\n      if(_.isArray(weeks[weekCounter])){\n        weeks[weekCounter].push(date);\n      }\n      else{\n        weeks[weekCounter] = [date];\n      }\n\n      if(date.getDay() === 6){\n        weekCounter++;\n      }\n    });\n    \n    while(weeks[0].length < 7){ // pad first week with nulls, if needed\n      weeks[0].unshift(null);\n    }\n\n    while(weeks[weeks.length-1].length < 7){ // pad last week with nulls, if needed\n      weeks[weeks.length-1].push(null);\n    }\n\n    return(weeks);\n  }\n\n  generateWeekRow(week, weekIndex) {\n    let holidays = this.props.holidays;\n    \n    function getNextHoliday(date) {\n      let nextHoliday = null;\n\n      _.forEach(holidays, (holiday) => {\n        if(holiday.date > date.getDate() && nextHoliday === null){\n          nextHoliday = holiday;\n        }\n      });\n\n      return(nextHoliday);\n    }\n\n    return(\n      <Table.Row key={\"week_\"+weekIndex}>\n        {\n          _.map(week, (date, index) => {\n            if(date){\n              return(\n                <CalCell holiday={_.find(holidays, {date: date.getDate()})} nextHoliday={getNextHoliday(date)} date={date} key={\"date_\"+index} />\n              );\n            }\n            else{\n              return(\n                <CalCell date={null} key={\"date_\"+index} />\n              );\n            }\n          })\n        }\n      </Table.Row>\n    );\n  }\n\n  render() {\n    return(\n      <Table celled unstackable textAlign=\"center\" >\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell content=\"S\" />\n            <Table.HeaderCell content=\"M\" />\n            <Table.HeaderCell content=\"T\" />\n            <Table.HeaderCell content=\"W\" />\n            <Table.HeaderCell content=\"T\" />\n            <Table.HeaderCell content=\"F\" />\n            <Table.HeaderCell content=\"S\" />\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {\n            _.map(this.state.weeks, this.generateWeekRow)\n          }\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nexport default CalendarMonth;","import React from 'react';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport {\n  Grid\n} from 'semantic-ui-react';\n\nimport CalendarMonthButton from '../components/CalendarMonthButton.js';\nimport CalendarMonth from '../components/CalendarMonth.js';\n\nclass Calendar extends React.Component {\n\n  constructor(props){\n    super(props);\n    \n    this.state = {\n      currentMonthNumber: (new Date()).getMonth(),\n      currentMonthHolidays: [],\n      holidays: [],\n    };\n\n    this.handleMonthUpdate = this.handleMonthUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"https://www.gov.uk/bank-holidays.json\")\n    .then(({ data }) => {\n      let currentYear = (new Date()).getFullYear();\n      let scottishHolidays = _.filter(data.scotland.events, (item) => (_.includes(item.date, currentYear))); // get holidays only for the current year\n      let holidays = _.map(scottishHolidays, (holiday) => {\n        let holiDate = new Date(holiday.date);\n        return({\n          name: holiday.title,\n          month: holiDate.getMonth(),\n          date: holiDate.getDate(),\n        });\n      });\n\n      this.setState({\n        holidays,\n        currentMonthHolidays: _.filter(holidays, (holiday) => (holiday.month === this.state.currentMonthNumber)),\n      });\n    })\n    .catch((err) => {\n      console.error(\"ERROR:\", err);\n    })\n  }\n\n  handleMonthUpdate(newMonth) {\n    if(_.isNumber(newMonth) && newMonth >= 0 && newMonth <= 11){\n      this.setState({\n        currentMonthNumber: newMonth,\n        currentMonthHolidays: _.filter(this.state.holidays, (holiday) => (holiday.month === newMonth)),\n      });\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        <Grid>\n          <Grid.Row columns={1} centered >\n            <CalendarMonthButton currentMonth={this.state.currentMonthNumber} onMonthUpdate={this.handleMonthUpdate} />\n          </Grid.Row>\n          <Grid.Row columns={1} centered >\n            <Grid.Column>\n              <CalendarMonth currentMonth={this.state.currentMonthNumber} holidays={this.state.currentMonthHolidays} />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;","import React from 'react';\nimport {\n\n} from 'semantic-ui-react';\n\nclass EditDate extends React.Component {\n\n  render() {\n    return(\n      <div>\n        \n      </div>\n    );\n  }\n}\n\nexport default EditDate;","import React from 'react';\nimport {\n\n} from 'semantic-ui-react';\n\nclass NotFound extends React.Component {\n\n  render() {\n    return(\n      <div>\n        Sorry, this path was not found...\n      </div>\n    );\n  }\n}\n\nexport default NotFound;","import React from 'react';\nimport {\n  Route,\n  Switch\n} from 'react-router-dom';\nimport {\n  Card,\n} from 'semantic-ui-react';\n\nimport Calendar from './containers/Calendar.js';\nimport EditDate from './containers/EditDate.js';\nimport NotFound from './containers/NotFound.js';\n\nclass App extends React.Component {\n\n  render() {\n    return(\n      <div style={{margin:\"0.5em\"}} >\n        <Card fluid >\n          <Card.Content>\n            <Card.Header content=\"CalEdit\" />\n          </Card.Content>\n          <Card.Content>\n            <Switch>\n              <Route exact path=\"/\" component={Calendar} />\n              <Route exact path=\"/edit\" component={EditDate} />\n              <Route component={NotFound} />\n            </Switch>\n          </Card.Content>\n        </Card>\n      </div>\n    );\n  }\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App.js';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL} >\n    <App />\n  </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}